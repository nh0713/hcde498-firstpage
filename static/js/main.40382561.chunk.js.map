{"version":3,"sources":["logo.svg","config/Fire.js","SignedInBanner.js","SearchPage.js","LoginBanner.js","Login.js","CreateAccount.js","LoginCreateAccount.js","Error.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","SignedInBanner","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logout","bind","assertThisInitialized","user","auth","currentUser","userEmail","email","signOut","react_default","a","createElement","fluid","Row","className","Col","sm","md","lg","Button","onClick","Component","SearchPage","src_SignedInBanner","Container","SearchPage_SearchBar","SearchPage_RowHomeScreenButtons","SearchBar","searchClicked","event","console","log","searchText","searchInput","target","value","type","placeholder","aria-label","onChange","href","SearchPageButton","role","RowHomeScreenButtons","SearchPage_SearchPageButton","LoginBanner","LoginPage","login","handleChange","state","password","e","setState","defineProperty","name","preventDefault","signInWithEmailAndPassword","then","u","catch","error","alert","src_LoginBanner","onSubmit","handleSubmit","FormGroup","controlId","size","FormLabel","FormControl","autoFocus","block","CreateAccount","createAccount","passwordRetype","displayName","createUserWithEmailAndPassword","required","LoginCreateAccount","Login","src_CreateAccount","App","App_LoginOrSearchPage","LoginOrSearchPage","authListener","_this2","onAuthStateChanged","localStorage","setItem","uid","removeItem","src_SearchPage","src_LoginCreateAccount","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40382561.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyA_jKe7ug9rZwmgEY64XC6hkm8rB4ckWww\",\r\n    authDomain: \"hcde-498-final-project.firebaseapp.com\",\r\n    databaseURL: \"https://hcde-498-final-project.firebaseio.com\",\r\n    projectId: \"hcde-498-final-project\",\r\n    storageBucket: \"hcde-498-final-project.appspot.com\",\r\n    messagingSenderId: \"45130628859\"\r\n};\r\n\r\nconst fire = firebase.initializeApp(config);\r\nexport default fire;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom'\r\nimport { Row, Col, Button } from 'react-bootstrap';\r\nimport fire from './config/Fire';\r\n\r\nclass SignedInBanner extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.logout = this.logout.bind(this);\r\n        this.user= fire.auth().currentUser;\r\n        this.userEmail = this.user.email;\r\n    }\r\n\r\n    logout() {\r\n        fire.auth().signOut();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <header fluid >\r\n        <Row className=\"banner\">\r\n            <Col sm={12} md={9} lg={9}>\r\n                <h1>Buy and Sell Textbooks Locally</h1>\r\n            </Col>\r\n            <Col sm={6} md={1} lg={1}>\r\n                <Button onClick={this.logout}>Logout</Button>\r\n            </Col>\r\n            <Col sm={6} md={2} lg={2}>\r\n                <Button>Acccount ({this.userEmail})</Button>\r\n            </Col>\r\n        </Row>\r\n        </header>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default SignedInBanner;","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom'\r\nimport SignedInBanner from './SignedInBanner'\r\nimport fire from './config/Fire';\r\n\r\nclass SearchPage extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          <SignedInBanner />\r\n          <Container fluid className=\"searchAndButtons\">\r\n            <SearchBar />\r\n            <RowHomeScreenButtons />\r\n          </Container>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  class SearchBar extends Component{\r\n    constructor(props) {\r\n      super(props);\r\n      this.searchText = \"\";\r\n    }\r\n  \r\n    searchClicked = (event) => {\r\n      console.log(this.searchText);\r\n    }\r\n  \r\n    searchInput = (event) => {\r\n      this.searchText = event.target.value;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"search-box\">\r\n          <form>\r\n            <input className=\"search-txt\" type=\"text\" placeholder=\"Type to search\" aria-label=\"Search\" onChange={this.searchInput}></input>  \r\n          </form>        \r\n          <a className=\"search-btn\" href='#' onClick={this.searchClicked}>\r\n            <i className=\"fas fa-search fa-2x\"></i>\r\n          </a>\r\n        </div>\r\n      );\r\n      \r\n    }\r\n  }\r\n\r\n  class SearchPageButton extends Component {\r\n    render() {\r\n      let type = this.props.type;\r\n  \r\n      return <a href=\"#\" className=\"homeBtn m-5 btn-lg\" role=\"button\">{type}</a>;\r\n    }\r\n  }\r\n\r\n  class RowHomeScreenButtons extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"mt-5\">\r\n          <Row className=\"homePageBtnRow justify-content-center\">\r\n            <Col lg={4} className=\"mt-4\">\r\n                <SearchPageButton type=\"My Posts\" />\r\n            </Col>\r\n            <Col lg={4} className=\"mt-4\">\r\n                <SearchPageButton type=\"Sell\" />\r\n            </Col>\r\n            <Col lg={4} className=\"mt-4\">\r\n                <SearchPageButton type=\"Bookmarks\" />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default SearchPage;","import React, { Component } from 'react';\r\nimport { Button, FormGroup, FormControl, FormLabel, Container, Row, Col } from \"react-bootstrap\";\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom'\r\n\r\n\r\nclass LoginBanner extends Component {\r\n    render() {\r\n      return (\r\n        <header fluid className=\"banner\">\r\n          <h1>Buy and Sell Textbooks Locally</h1>\r\n        </header>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default LoginBanner;","import React, { Component } from 'react';\r\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom'\r\nimport LoginBanner from './LoginBanner'\r\nimport fire from './config/Fire';\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n        email: '',\r\n        password: ''\r\n        };\r\n    }\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        }\r\n    \r\n    login(e) {\r\n        e.preventDefault();\r\n        fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\r\n        }).catch((error) => {\r\n            console.log(error);\r\n            alert(error);\r\n        });\r\n    }  \r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <LoginBanner />\r\n          <div className=\"login\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <FormGroup controlId=\"email\" size=\"large\">\r\n                <FormLabel>Email</FormLabel>\r\n                <FormControl\r\n                  autoFocus\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup controlId=\"password\" size=\"large\"> \r\n                <FormLabel>Password</FormLabel>\r\n                <FormControl\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </FormGroup>\r\n              <Button\r\n                block\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                onClick={this.login}\r\n              >\r\n                Login\r\n            </Button>\r\n            </form>\r\n            {/* <Link to=\"/hcde498-firstpage/createAccount\"> */}\r\n            {/* <Link to=\"/createAccount\"> */}\r\n                <div className=\"mt-4\">\r\n                    <a className=\"createAccount\" href=\"#\" >Create Account</a>\r\n                </div>\r\n            {/* </Link> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default LoginPage;","import React, { Component } from 'react';\r\nimport { Button, FormGroup, FormControl, FormLabel} from \"react-bootstrap\";\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom'\r\nimport LoginBanner from './LoginBanner'\r\nimport fire from './config/Fire';\r\n\r\nclass CreateAccount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.createAccount = this.createAccount.bind(this);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            passwordRetype: \"\",\r\n            displayName: \"\",\r\n          };\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    createAccount(e){\r\n        if(this.state.password === this.state.passwordRetype){\r\n            e.preventDefault();\r\n            fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\r\n            }).then((u)=>{console.log(u)})\r\n            .catch((error) => {\r\n                console.log(error);\r\n                alert(error);\r\n                })\r\n        } else {\r\n            alert(\"passwords do not match\");\r\n            console.log(\"passwords do not match\");\r\n        }\r\n        // fire.updateProfie({\r\n        //     displayName: this.state.displayName,\r\n        // })\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          {/* <LoginBanner /> */}\r\n          <div className=\"login\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <FormGroup controlId=\"email\" size=\"large\">\r\n                <FormLabel>Email</FormLabel>\r\n                <FormControl\r\n                  autoFocus\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup controlId=\"password\" size=\"large\"> \r\n                <FormLabel>Password</FormLabel>\r\n                <FormControl\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup controlId=\"password\" size=\"large\"> \r\n                <FormLabel>Retype Password</FormLabel>\r\n                <FormControl\r\n                  type=\"password\"\r\n                  name=\"passwordRetype\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup controlId=\"displayName\" size=\"large\"> \r\n                <FormLabel>Display Name</FormLabel>\r\n                <FormControl\r\n                    required\r\n                  type=\"text\"\r\n                  name=\"displayName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </FormGroup>\r\n              <Button\r\n                block\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                onClick={this.createAccount}\r\n              >\r\n                Create Account\r\n            </Button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default CreateAccount;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport LoginPage from './Login'\r\nimport CreateAccount from './CreateAccount'\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nclass LoginCreateAccount extends Component{\r\n    render(){\r\n        return (\r\n            <Row>\r\n                <Col sm={12} md={6} lg={6}>\r\n                    <LoginPage />\r\n                </Col>\r\n                <Col sm={12} md={6} lg={6}>\r\n                    <CreateAccount />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginCreateAccount;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Error extends Component {\r\n    render() {\r\n        return (\r\n            <p>Error: Path does not exist</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Error;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Link, Switch} from 'react-router-dom'\r\nimport SearchPage from './SearchPage'\r\nimport LoginPage from './Login'\r\nimport CreateAccount from './CreateAccount'\r\nimport Error from './Error'\r\nimport LoginCreateAccount from './LoginCreateAccount'\r\nimport fire from './config/Fire';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      // <Router>\r\n      //   <Switch>\r\n      //     <Route path='/hcde498-firstpage/' component={LoginOrSearchPage} exact/>\r\n      //     <Route path='/hcde498-firstpage/login' component={LoginPage} />\r\n      //     <Route path='/hcde498-firstpage/createAccount' component={CreateAccount} />\r\n      //     <Route path='/hcde498-firstpage/searchPage' component={SearchPage} />\r\n      //     <Route component={Error} />\r\n      //   </Switch> */}\r\n      //   <Switch>\r\n      //     <Route path='/' component={LoginOrSearchPage} exact/>\r\n      //     <Route path='/login' component={LoginPage} />\r\n      //     <Route path='/createAccount' component={CreateAccount} />\r\n      //     <Route path='/searchPage' component={SearchPage} />\r\n      //     <Route component={Error} />\r\n      //   </Switch>\r\n      // </Router>\r\n      <LoginOrSearchPage />\r\n    );\r\n  }\r\n}\r\n\r\nclass LoginOrSearchPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = ({\r\n      user: null,\r\n    });\r\n    this.authListener = this.authListener.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.authListener();\r\n  }\r\n\r\n  authListener() {\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      console.log(user);\r\n      if (user) {\r\n        this.setState({ user });\r\n        localStorage.setItem('user', user.uid);\r\n      } else {\r\n        this.setState({ user: null });\r\n        localStorage.removeItem('user');\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.state.user ? ( <SearchPage/>) : (<LoginCreateAccount />)\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}